console.log("кот">"код"); //true, буква т в юникоде U+0442, а д - U+0434 т>д в юникоде
console.log("коТ">"код"); //false, буква Т в юникоде U+0422 < д
console.log("2"+2*"2"); //24, т.к. при* и других операторах кроме бинарного "+" js преобразует число записанное текстом в число
console.log(undefined==null); //true, при нестрогом равенстве , это правило языка
console.log(undefined!=null); //false, при неравенстве, так как они по спецюправилу языка равны
console.log(null==0); //false, при нестрогом равенстве null и undefined не равны никаким значениям, кроме друг друга
console.log(2>"3"); //false, текст 3 становится числом 3, 2 меньше 3 сравнение неверно
console.log(null-false+true); //1, null становится 0, false также 0, true будет 1
console.log(1/"I"); //NaN, деление на текст является ошибкой
console.log("2"*"3"); //6, все операторы преобразуют текст в числа, кроме бинарного плюса
console.log(4+5+"O"); //9O, бинарный плюс складывает первые два числа и соединяет потом с текстом
console.log("I"+4+5); //I45, так как текст первый в сложении, то применяется бинарный плюс ко всем значениям и соединяет их
console.log("4"-2); //2, все операторы преобразуют текст в числа, кроме бинарного плюса
console.log("4"-"4x"); //NaN, ошибка неопределенная математическая операция, x - не задан
console.log("23"==23); //true, при нестрогом равенстве js преоразует текст в число
console.log(null==false); //false, при нестрогом равенстве null и undefined не равны никаким значениям, кроме друг друга
console.log("-4"/0+1); //-Infinity, приоритет деления выше чем сложения, деление на 0 приводит к отрицательной бесконечности
console.log(null+1); //1, null становится 0
console.log(undefined+null); //NaN, null становится 0, undefined - NaN
console.log(1==="1"); //false, при строгом равенстве разные типы переменых
console.log("2">10); //false, текст 2 становится числом 2, 2 меньше 10 сравнение неверно
console.log(NaN==undefined); //false, при нестрогом равенстве null и undefined не равны никаким значениям, кроме друг друга
 